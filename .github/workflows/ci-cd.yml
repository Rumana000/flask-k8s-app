name: CI/CD Pipeline for Flask App

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-k8s-app:latest .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/flask-k8s-app:latest

    - name: Configure AWS credentials 
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region us-east-1 --name flask-cluster

    - name: Deploy to EKS
      run: kubectl apply -f k8s/   

    - name: Get Service External IP
      run: |
        echo "Waiting for LoadBalancer IP..."
        for i in {1..10}; do
          IP=$(kubectl get svc flask-app-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          if [ "$IP" != "" ]; then
            echo "✅ External IP/DNS: $IP"
            break
          fi
          echo "⏳ Still waiting...retrying in 15 seconds"
          sleep 15
        done  